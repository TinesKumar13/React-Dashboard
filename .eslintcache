[{"/home/tinesh_ash/Documents/SIDP/covinfo/src/index.js":"1","/home/tinesh_ash/Documents/SIDP/covinfo/src/App.js":"2","/home/tinesh_ash/Documents/SIDP/covinfo/src/firebase.config.js":"3","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Card.js":"4","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/ProgressProvider.js":"5","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/States.js":"6","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/updateStates.js":"7","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/pieChart.js":"8","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Legend.js":"9","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Alltime.js":"10","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/funnelChart.js":"11","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Login.js":"12","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Shops.js":"13","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/UserTracker.js":"14","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Map.js":"15","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Shoppping.js":"16"},{"size":745,"mtime":1611765495534,"results":"17","hashOfConfig":"18"},{"size":2711,"mtime":1612074864657,"results":"19","hashOfConfig":"18"},{"size":531,"mtime":1610780482741,"results":"20","hashOfConfig":"18"},{"size":2413,"mtime":1611652583551,"results":"21","hashOfConfig":"18"},{"size":434,"mtime":1610643955444,"results":"22","hashOfConfig":"18"},{"size":2045,"mtime":1611239806599,"results":"23","hashOfConfig":"18"},{"size":13716,"mtime":1611393943554,"results":"24","hashOfConfig":"18"},{"size":2026,"mtime":1611652571203,"results":"25","hashOfConfig":"18"},{"size":1014,"mtime":1611324415846,"results":"26","hashOfConfig":"18"},{"size":1921,"mtime":1611652563351,"results":"27","hashOfConfig":"18"},{"size":2404,"mtime":1611646643316,"results":"28","hashOfConfig":"18"},{"size":7206,"mtime":1612078267223,"results":"29","hashOfConfig":"18"},{"size":3767,"mtime":1612101377661,"results":"30","hashOfConfig":"18"},{"size":6162,"mtime":1612003914356,"results":"31","hashOfConfig":"18"},{"size":3026,"mtime":1612082819353,"results":"32","hashOfConfig":"18"},{"size":5933,"mtime":1612109927312,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1r4ncwv",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tinesh_ash/Documents/SIDP/covinfo/src/index.js",[],["70","71"],"/home/tinesh_ash/Documents/SIDP/covinfo/src/App.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/firebase.config.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Card.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/components/ProgressProvider.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/components/States.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/components/updateStates.js",["72"],"import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"../App.css\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport db from \"../firebase.config\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"45ch\",\n      display: \"flex\",\n    },\n  },\n\n  text: {\n    marginBottom: \"1rem\",\n    marginLeft: \"3rem\",\n  },\n  button: {\n    marginLeft: \"4.5rem\",\n  },\n\n  links: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n  form: {\n    position: \"absolute\",\n    left: \"46rem\",\n  },\n  alert: {\n    position: \"absolute\",\n    bottom: 12,\n    left: 450,\n  },\n}));\n\nconst UpdateStates = () => {\n  const [selangor, setSelangor] = useState(\"\");\n  const [johor, setJohor] = useState(\"\");\n  const [kedah, setKedah] = useState(\"\");\n  const [kelantan, setKelantan] = useState(\"\");\n  const [melaka, setMelaka] = useState(\"\");\n  const [sembilan, setSembilan] = useState(\"\");\n  const [pahang, setPahang] = useState(\"\");\n  const [penang, setPenang] = useState(\"\");\n  const [perak, setPerak] = useState(\"\");\n  const [perlis, setPerlis] = useState(\"\");\n  const [sabah, setSabah] = useState(\"\");\n  const [sarawak, setSarawak] = useState(\"\");\n  const [terengganu, setTerengganu] = useState(\"\");\n  const [lumpur, setLumpur] = useState(\"\");\n  const [labuan, setLabuan] = useState(\"\");\n  const [putrajaya, setPutrajaya] = useState(\"\");\n  const [deaths, setDeaths] = useState(\"\");\n  const [recoveries, setRecoveries] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const [failure, setFailure] = useState(false);\n  const [prev, setPrev] = useState();\n\n  const classes = useStyles();\n\n  const errorMessage = () => {\n    if (failure)\n      return (\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          Error updating â€” <strong>ctry again!</strong>\n        </Alert>\n      );\n  };\n\n  const successMessage = () => {\n    if (success)\n      return (\n        <Alert severity=\"success\" className={classes.alert}>\n          <AlertTitle>Success</AlertTitle>\n          Cases Updated <strong>check it out!</strong>\n        </Alert>\n      );\n  };\n\n  useEffect(() => {\n    fetchCases();\n  }, []);\n\n  const fetchCases = async () => {\n    db.collection(\"state_cases\")\n      .orderBy(\"date\")\n      .get()\n      .then((querySnapshot) => {\n        const data = querySnapshot.docs.map((doc) => doc.data());\n\n        setPrev(data[data.length - 1]);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    if (\n      selangor === \"\" ||\n      johor === \"\" ||\n      kedah === \"\" ||\n      kelantan === \"\" ||\n      melaka === \"\" ||\n      sembilan === \"\" ||\n      pahang === \"\" ||\n      penang === \"\" ||\n      perak === \"\" ||\n      perlis === \"\" ||\n      sabah === \"\" ||\n      sarawak === \"\" ||\n      terengganu === \"\" ||\n      lumpur === \"\" ||\n      labuan === \"\" ||\n      putrajaya === \"\" ||\n      recoveries === \"\" ||\n      deaths === \"\"\n    ) {\n      return (<UpdateStates />), setFailure(true);\n    }\n    db.collection(\"state_cases\")\n      .add({\n        date: firebase.firestore.FieldValue.serverTimestamp(),\n        negeri: [\n          {\n            name: \"Selangor\",\n            new_case: parseInt(selangor),\n            total_case: parseInt(selangor) + prev.negeri[0].total_case,\n          },\n          {\n            name: \"Johor\",\n            new_case: parseInt(johor),\n            total_case: parseInt(johor) + prev.negeri[1].total_case,\n          },\n          {\n            name: \"Kedah\",\n            new_case: parseInt(kedah),\n            total_case: parseInt(kedah) + prev.negeri[2].total_case,\n          },\n          {\n            name: \"Kelantan\",\n            new_case: parseInt(kelantan),\n            total_case: parseInt(kelantan) + prev.negeri[3].total_case,\n          },\n          {\n            name: \"Melaka\",\n            new_case: parseInt(melaka),\n            total_case: parseInt(melaka) + prev.negeri[4].total_case,\n          },\n          {\n            name: \"Negeri Sembilan\",\n            new_case: parseInt(sembilan),\n            total_case: parseInt(sembilan) + prev.negeri[5].total_case,\n          },\n          {\n            name: \"Pahang\",\n            new_case: parseInt(pahang),\n            total_case: parseInt(pahang) + prev.negeri[6].total_case,\n          },\n          {\n            name: \"Penang\",\n            new_case: parseInt(penang),\n            total_case: parseInt(penang) + prev.negeri[7].total_case,\n          },\n          {\n            name: \"Perak\",\n            new_case: parseInt(perak),\n            total_case: parseInt(perak) + prev.negeri[8].total_case,\n          },\n          {\n            name: \"Perlis\",\n            new_case: parseInt(perlis),\n            total_case: parseInt(perlis) + prev.negeri[9].total_case,\n          },\n          {\n            name: \"Sabah\",\n            new_case: parseInt(sabah),\n            total_case: parseInt(sabah) + prev.negeri[10].total_case,\n          },\n          {\n            name: \"Sarawak\",\n            new_case: parseInt(sarawak),\n            total_case: parseInt(sarawak) + prev.negeri[11].total_case,\n          },\n          {\n            name: \"Terengganu\",\n            new_case: parseInt(terengganu),\n            total_case: parseInt(terengganu) + prev.negeri[12].total_case,\n          },\n          {\n            name: \"Kuala Lumpur\",\n            new_case: parseInt(lumpur),\n            total_case: parseInt(lumpur) + prev.negeri[13].total_case,\n          },\n          {\n            name: \"Labuan\",\n            new_case: parseInt(labuan),\n            total_case: parseInt(labuan) + prev.negeri[14].total_case,\n          },\n          {\n            name: \"Putrajaya\",\n            new_case: parseInt(putrajaya),\n            total_case: parseInt(putrajaya) + prev.negeri[15].total_case,\n          },\n        ],\n        newCase:\n          parseInt(johor) +\n          parseInt(selangor) +\n          parseInt(kedah) +\n          parseInt(kelantan) +\n          parseInt(melaka) +\n          parseInt(sembilan) +\n          parseInt(pahang) +\n          parseInt(penang) +\n          parseInt(perak) +\n          parseInt(perlis) +\n          parseInt(sabah) +\n          parseInt(sarawak) +\n          parseInt(terengganu) +\n          parseInt(lumpur) +\n          parseInt(labuan) +\n          parseInt(putrajaya),\n        newDeath: parseInt(deaths),\n        newRecovery: parseInt(recoveries),\n        totalCase:\n          parseInt(selangor) +\n          prev.negeri[0].total_case +\n          parseInt(johor) +\n          prev.negeri[1].total_case +\n          parseInt(kedah) +\n          prev.negeri[2].total_case +\n          parseInt(kelantan) +\n          prev.negeri[3].total_case +\n          parseInt(melaka) +\n          prev.negeri[4].total_case +\n          parseInt(sembilan) +\n          prev.negeri[5].total_case +\n          parseInt(pahang) +\n          prev.negeri[6].total_case +\n          parseInt(penang) +\n          prev.negeri[7].total_case +\n          parseInt(perak) +\n          prev.negeri[8].total_case +\n          parseInt(perlis) +\n          prev.negeri[9].total_case +\n          parseInt(sabah) +\n          prev.negeri[10].total_case +\n          parseInt(sarawak) +\n          prev.negeri[11].total_case +\n          parseInt(terengganu) +\n          prev.negeri[12].total_case +\n          parseInt(lumpur) +\n          prev.negeri[13].total_case +\n          parseInt(labuan) +\n          prev.negeri[14].total_case +\n          parseInt(putrajaya) +\n          prev.negeri[15].total_case,\n\n        totalRecovery: parseInt(recoveries) + prev.totalRecovery,\n        totalDeath: parseInt(deaths) + prev.totalDeath,\n      })\n      .then(() => {\n        setSuccess(true);\n        setJohor(\"\");\n        setSelangor(\"\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setFailure(true);\n      });\n  };\n\n  return (\n    <div className={classes.form}>\n      <form\n        className={classes.root}\n        noValidate\n        required\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <h1>Update States Cases</h1>\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Selangor\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setSelangor(e.target.value)}\n          value={selangor}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Johor\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setJohor(e.target.value)}\n          value={johor}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Kedah\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setKedah(e.target.value)}\n          value={kedah}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Kelantan\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setKelantan(e.target.value)}\n          value={kelantan}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Melaka\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setMelaka(e.target.value)}\n          value={melaka}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Negeri Sembilan\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setSembilan(e.target.value)}\n          value={sembilan}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Pahang\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setPahang(e.target.value)}\n          value={pahang}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Penang\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setPenang(e.target.value)}\n          value={penang}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Perak\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setPerak(e.target.value)}\n          value={perak}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Perlis\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setPerlis(e.target.value)}\n          value={perlis}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Sabah\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setSabah(e.target.value)}\n          value={sabah}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Sarawak\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setSarawak(e.target.value)}\n          value={sarawak}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Terengganu\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setTerengganu(e.target.value)}\n          value={terengganu}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Kuala Lumpur\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setLumpur(e.target.value)}\n          value={lumpur}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Labuan\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setLabuan(e.target.value)}\n          value={labuan}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"Putrajaya\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setPutrajaya(e.target.value)}\n          value={putrajaya}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"New Death\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setDeaths(e.target.value)}\n          value={deaths}\n        />\n        <TextField\n          required\n          id=\"outlined-basic\"\n          label=\"New Recovery\"\n          variant=\"outlined\"\n          className={classes.text}\n          type=\"number\"\n          onChange={(e) => setRecoveries(e.target.value)}\n          value={recoveries}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          onClick={handleSubmit}\n        >\n          Update States\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n        >\n          <Link to=\"/dashboard\" className={classes.links}>\n            Back To Dashboard\n          </Link>\n        </Button>\n      </form>\n      {(errorMessage(), successMessage())}\n    </div>\n  );\n};\n\nexport default UpdateStates;\n","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/pieChart.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Legend.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Alltime.js",["73"],"import React, { useEffect } from \"react\";\nimport {\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  CartesianGrid,\n  Line,\n} from \"recharts\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst Alltime = ({ cases }) => {\n  const useStyles = makeStyles({\n    root: {\n      width: 775,\n      height: 375,\n    },\n    title: {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n    },\n    content: {\n      position: \"absolute\",\n      top: 50,\n    },\n    date: {\n      fontSize: 14,\n      color: \"text-secondary\",\n    },\n  });\n\n  const classes = useStyles();\n\n  const data = [];\n\n  cases &&\n    cases[0].map((c) => {\n      return data.push({\n        date: new Date(c.date.seconds * 1000).toLocaleDateString(),\n        cases: c.newCase,\n        death: c.newDeath,\n        recoveries: c.newRecovery,\n      });\n    });\n\n  return (\n    <div>\n      <Card className={classes.root}>\n        <CardContent className={classes.content}>\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            All Time Analysis Of Cases In Malaysia\n          </Typography>\n          <LineChart\n            width={730}\n            height={250}\n            data={data}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"cases\" stroke=\"#ffc658\" />\n            <Line type=\"monotone\" dataKey=\"recoveries\" stroke=\"#7AFF66\" />\n            <Line type=\"monotone\" dataKey=\"death\" stroke=\"#FF6666\" />\n          </LineChart>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Alltime;\n","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/funnelChart.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Login.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Shops.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/components/UserTracker.js",["74","75","76"],"import React, { useState, useEffect } from \"react\";\nimport {  useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport db from \"../firebase.config\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport \"./Map.css\";\nimport MapShower from \"./Map\";\n\n\n\n\n\n\n\nconst UserTracker = () => {\n\n\n\n  const [details, setDetails] = useState([]);\n  const [profile, setProfile] = useState()\n  const [location, setLocation] = useState([])\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  \n\n  let { id } = useParams();\n  let trimmed = id.trim()\n\n  useEffect(() => {\n \n    return db.collection(\"users\").doc(trimmed).collection(\"check_in\")\n    .orderBy(\"date\")\n    .onSnapshot(snapshot => {\n      const detailData = []\n      snapshot.forEach(doc => detailData.push({...doc.data()}))\n      setDetails(detailData)\n    })\n\n   \n  },[])\n\n\n  useEffect(() => {\n \n    fetchProfile()\n\n   \n  },[])\n\n  useEffect(() => {\n \n  return db.collection(\"users\").doc(trimmed).collection(\"location\")\n          .orderBy(\"time\")\n          .onSnapshot(snapshot => {\n            const locationData = []\n            snapshot.forEach(doc => locationData.push({...doc.data()}))\n            setLocation(locationData)\n          })\n\n   \n  },[])\n\n\n\n\n\n\n\n\n\n\n  const fetchProfile = async () => {\n\n  \n    \n   await db.collection(\"users\")\n      .doc(trimmed)\n      .get()\n      .then(function(doc) {\n        if (doc.exists) {\n   \n           setProfile(doc.data())\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n    });\n  }\n\n\n\n\n\n\n  const useStyles = makeStyles({\n    root: {\n      width: 475,\n      height: 505,\n      margin: 30,\n    \n  \n\n\n    },\n    title: {\n      fontSize: 14,\n   \n\n    },\n    container : {\n      display : \"flex\",\n      alignItems: \"center\",\n      height: 600,\n      justifyContent: \"center\",\n    \n    },\n\n    details: {\n      display:\"flex\",\n      flexDirection:\"column\",\n      alignItems:\"center\",\n   \n    },\n    rootPaper: {\n      width: 475,\n      height: 505,\n\n    },\n    containerPaper: {\n      height: 450,\n    },\n\n  });\n\n  const classes = useStyles();\n\n  const columns = [\n    { id: 'latitude', label: 'Latitude', minWidth: 170 },\n    { id: 'longitude', label: 'Longitude', minWidth: 100 },\n    {\n      id: 'time',\n      label: 'Date & Time',\n      minWidth: 100,\n      format: (value) => new Date(value.seconds * 1000).toLocaleString()\n    }\n  \n  ];\n\n \n\nreturn  (\n \n    <div className=\"container\">\n  \n    <div  className={classes.container}>\n      \n      <Card className={classes.root}>\n        <CardContent className={classes.details}>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Name : {profile && profile.displayName}\n\n        </Typography>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n     \n          IC : {profile && profile.ic}  \n         \n        </Typography>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n\n          Phone : {profile && profile.phoneNumber}\n        </Typography>\n\n        {details && details.map(detail => (\n            \n          <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n            \n      {`Shop Name : ${detail.shop_name} \\u00A0\\u00A0Date : ${new Date(detail.date.seconds *1000).toLocaleString()}`}\n        </Typography>\n        ))}\n        </CardContent>\n      </Card>\n\n      <Paper className={classes.rootPaper}>\n      <TableContainer className={classes.containerPaper}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {location.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((l) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={l.latitude}>\n                  {columns.map((column) => {\n                    const value = l[column.id]\n                \n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'object' ? column.format(value):value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={location.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n    </div>\n\n        {location.length && <MapShower locations={location}/> }\n\n  </div>\n  )\n};\n\nexport default UserTracker;\n","/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Map.js",[],"/home/tinesh_ash/Documents/SIDP/covinfo/src/components/Shoppping.js",["77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":124,"column":32,"nodeType":"85","messageId":"86","endLine":124,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":60,"column":5,"nodeType":"93","endLine":60,"endColumn":7,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":68,"column":5,"nodeType":"93","endLine":68,"endColumn":7,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"92","line":81,"column":5,"nodeType":"93","endLine":81,"endColumn":7,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":62,"column":40,"nodeType":"100","messageId":"101","endLine":62,"endColumn":42},{"ruleId":"98","severity":1,"message":"102","line":148,"column":35,"nodeType":"100","messageId":"101","endLine":148,"endColumn":37},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'trimmed'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'fetchProfile'. Either include it or remove the dependency array.",["106"],["107"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.find() expects a value to be returned at the end of arrow function.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"108","fix":"112"},"Update the dependencies array to be: [trimmed]",{"range":"113","text":"114"},"Update the dependencies array to be: [fetchProfile]",{"range":"115","text":"116"},{"range":"117","text":"114"},[1631,1633],"[trimmed]",[1687,1689],"[fetchProfile]",[2013,2015]]